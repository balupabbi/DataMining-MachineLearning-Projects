censusData <- read.csv("~/Downloads/censusData.csv")
View(censusData)
install.packages("ggplot2")
library(ggplot2)
censusData <- read.csv("~/Downloads/censusData.csv")
qplot(censusData$age, geom="histogram")
qplot(censusData$income, geom = "histogram", xlab = "Income", xlim = "<=50")
qplot(censusData$income, geom = "histogram", xlab = "Income", xlim = (<=50)
qplot(censusData$income, geom = "histogram", xlab = "Income", xlim = (<=50))
qplot(censusData$income, geom = "histogram", xlab = "Income", xlim = ('<=50K'))
graphobj2 = ggplot(data2,aes(age))+geom_histogram()+xlab('Age')+ylab('Counts based on Income')+facet_grid(income ~.)
graphobj2
graphobj2 = ggplot(censusData,aes(age))+geom_histogram()+xlab('Age')+ylab('Counts based on Income')+facet_grid(income ~.)
graphobj2
graphobj3 = ggplot(data2,aes(hrs_per_week))+geom_histogram()+xlab('hrs_per_week')+ylab('Counts based on Income')+facet_grid(income ~.)
graphobj3
graphobj3 = ggplot(censusData,aes(hrs_per_week))+geom_histogram()+xlab('hrs_per_week')+ylab('Counts based on Income')+facet_grid(income ~.)
graphobj3
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = "income", margins = FALSE, scales = "fixed"))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = censusData$income, margins = FALSE, scales = "fixed"))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = censusData$income))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = censusData$income ~.))
clear
clean
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = income ~.))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = "income ~."))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = income ~ .))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = (income ~ .))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = (income ~ .))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facet_grid(facets = (income ~ .)))
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(censusData$age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = censusData$income ~ .)
qplot(censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = censusData$income ~ .)
qplot(censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
graphobj2 = ggplot(censusData,aes(age))+geom_histogram()+xlab('Age')+ylab('Counts based on Income')+facet_grid(income ~.)
graphobj2
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
graphobj2 = ggplot(censusData,aes(age))+geom_histogram()+xlab('Age')+ylab('Counts based on Income')+facet_grid(income ~.)
graphobj2
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts", facets = income ~ .)
qplot(data = censusData, x = age, geom = "boxplots", xlab = "Age", ylab = "Counts", facets = . ~ income)
qplot(data = censusData, x = age, geom = "boxplot", xlab = "Age", ylab = "Counts", facets = . ~ income)
qplot(data = censusData, x = age, geom = "boxplot", xlab = "Age", ylab = "Counts", facets = . income ~)
qplot(data = censusData, x = age, geom = "boxplot", xlab = "Age", ylab = "Counts", facets = . income ~)
qplot(data = censusData, x = age, geom = "boxplot", xlab = "Age", ylab = "Counts", facets = ~ income .)
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts", facets = income ~ .)
qplot(data = censusData, x = age, y = income, geom = "boxplot")
qplot(data = censusData, x = age, y = income, geom = "boxplot")
graphobj4 = ggplot(data=censusData,aes(x=income,y=age))+geom_boxplot()+xlab('Income Categories')+ylab('Age')
graphobj4
qplot(data = censusData, x = income, y = age, geom = "boxplot")
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = hrs_per_wk, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = hrs_per_week , geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = income, y = age, geom = "boxplot")
qplot(data = censusData, x = income, y = hrs_per_week, geom = "boxplot")
qplot(data = censusData, x = work, geom = "bargraph")
qplot(data = censusData, x = work, geom = "barplot")
qplot(data = censusData, x = work, geom = "bar")
qplot(data = censusData, x = edu, geom = "bar")
qplot(data = censusData, x = marital, geom = "bar")
qplot(data = censusData, x = occupation, geom = "bar")
qplot(data = censusData, x = race, geom = "bar")
qplot(data = censusData, x = sex, geom = "bar")
qplot(data = censusData, x = income, geom = "bar")
qplot(data = censusData, x = work , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = edu , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = marital , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = occupation , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = race , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = sex , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "scatterplot")
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point")
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = 1)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = 5)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = 0.5)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = 0.05)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = 0.0005)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = 0.0000000005)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = I(1))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = I(2))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = I(1))
graphobj18 = ggplot(data=data2,aes(x=age, y=hrs_per_week))+geom_point(alpha=1/20)+xlab('Age')+ylab('hrs_per_week')
graphobj18
graphobj18 = ggplot(data=censusData,aes(x=age, y=hrs_per_week))+geom_point(alpha=1/20)+xlab('Age')+ylab('hrs_per_week')
graphobj18
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = I(1))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = I(1), alpha = qsec)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = I(1), alpha = I(0.2))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = I(1), alpha = I(0.5))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point", size = I(1), alpha = I(0.5), position = "jitter")
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position = "jitter")
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), size = I(1),)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), size = I(1), colour = cyl)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(0.5, 0.5))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(0.5, 1))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(1, 1))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(1, 1), size = I(1))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(1, 2), size = I(1))
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(3, 5), size = I(1))
cor.test(censusData$age, censusData$hrs_per_week)
cor(censusData$age, censusData$hrs_per_week)
cor(censusData$age, censusData$hrs_per_week)[2]
cor(censusData$age, censusData$hrs_per_week)[2]
cor(censusData$age, censusData$hrs_per_week)
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
library(ggplot2)
censusData <- read.csv("~/Downloads/censusData.csv")
source('~/Desktop/hw1.R')
library(ggplot2)
censusData <- read.csv("~/Downloads/censusData.csv")
qplot(censusData$age, geom="histogram")
qplot(censusData$hrs_per_week, geom="histogram")
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = hrs_per_week , geom = "histogram", xlab = "Age", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = income, y = age, geom = "boxplot")
qplot(data = censusData, x = income, y = hrs_per_week, geom = "boxplot")
qplot(data = censusData, x = work, geom = "bar")
qplot(data = censusData, x = edu, geom = "bar")
qplot(data = censusData, x = marital, geom = "bar")
qplot(data = censusData, x = occupation, geom = "bar")
qplot(data = censusData, x = race, geom = "bar")
qplot(data = censusData, x = sex, geom = "bar")
qplot(data = censusData, x = income, geom = "bar")
qplot(data = censusData, x = work , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = edu , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = marital , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = occupation , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = race , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = sex , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(3, 5), size = I(1))
cor.test(censusData$age, censusData$hrs_per_week)
cor(censusData$age, censusData$hrs_per_week)
censusData[censusData == ?]
censusData[censusData == "?"]
is.na(censusData)
sum(censusData == "?")
rowSums(censusData = "?")
rowSums(censusData == "?")
rowSums(censusData == "?") <- missingData
missingData = rowSums(censusData == '?')
qplot(missingData, ggeom = "histogram")
qplot(data = missingData, y = data, ggeom = "histogram")
qplot(data = missingData, y = missingData, ggeom = "histogram")
qplot(t(missingData), ggeom = "histogram")
missingData = rowSums(censusData == '?')
right = t(missingData)
qpot(right, geom = "histogram")
qplot(right, geom = "histogram")
qplot(right, x = ridht$data, geom = "histogram")
missingPerc <- censusData/missingData *100
rowSums(censusData=="?")/rowSums(!is.na(censusData))
rowSums(censusData=="?")/rowSums(!is.na(censusData))*100
missingData <- rowSums(censusData == '?')
qplot(missingData, geom = "histogram")
missingPercentages <- rowSums(censusData=="?")/rowSums(!is.na(censusData))*100
library(ggplot2)
censusData <- read.csv("~/Downloads/censusData.csv")
missingPercentages <- rowSums(censusData=="?")/rowSums(!is.na(censusData))*100
missingPercentages
qplot(missingData, geom = "histogram") + coord_flip()
qplot(missingData, geom = "histogram")
qplot(missingData$x, geom = "histogram")
qplot(data = missingData, x = missingData$index geom = "histogram")
qplot(data = missingData, x = missingData$index, y = missingData$value geom = "histogram")
qplot(data = missingData, x = missingData$index, y = missingData$value, geom = "histogram")
qplot(data = missingData, x = index, y = value, geom = "histogram")
missingData
data.frame(missingData, x y)
data.frame(missingData)
misi <- data.frame(missingData)
qplot(misi, geom = "histogram")
head(misi, 10)
head(misi$missingData, 10)
qplot(misi$missingData, geom = "histogram")
qplot(misi$1, geom = "histogram")
qplot(misi$"", geom = "histogram")
head(misi$" ", 10)
misi <- data.frame(missingData, x)
qplot(data = misi, y = misi$missingData , geom = "histogram")
qplot(data = misi, x=misi[1] ,y = misi$missingData , geom = "histogram")
qplot(data = misi, x = misi[1] ,y = misi$missingData , geom = "histogram")
misi <- data.frame(count, missingData)
misi <- data.frame("count", missingData)
head(misi$" ", 10)
head(misi, 10)
str(misi)
qplot(data = censusData, x = rowSums(censusData == "?"))
qplot(data = censusData, y = rowSums(censusData == "?"))
qplot(data = censusData, y = rowSums(censusData == "?"), geom = "histogram")
qplot(data = censusData, y = rowSums(censusData == "?"))
qplot(data = censusData, x = nrow(df) y = rowSums(censusData == "?"))
qplot(data = censusData, x = nrow(censusData) y = rowSums(censusData == "?"))
qplot(data = censusData, x = row, y = rowSums(censusData == "?"))
qplot(data = censusData, x = nrow(censusData), y = rowSums(censusData == "?"))
qplot(data = censusData, x = row(censusData, as.factor = TRUE), y = rowSums(censusData == "?"))
qplot(data = censusData, x = row, y = rowSums(censusData == "?"))
count <- 0
misi <- data.frame(count+1, missingData)
head(misi, 10)
misi <- data.frame(count+, missingData)
misi <- data.frame(count++, missingData)
misi <- data.frame(count+= 1, missingData)
misi <- data.frame(inc(count) <-1, missingData)
install.packages("Hmisc")
library(Hmisc)
misi <- data.frame(inc(count) <-1, missingData)
head(misi, 10)
misi <- data.frame(inc(count)<-1, missingData)
head(misi, 10)
misi <- data.frame('+'(count)<-1, missingData)
misi <- data.frame(+(count)<-1, missingData)
misi <- data.frame(count <- count + 1, missingData)
head(misi, 10)
count <- 0
misi <- data.frame(count <- count + 1, missingData)
head(misi, 10)
t(missingData)
missingData
t(missingData)
head(t(missingData), 5)
misi <- data.frame(t(missingData))
head(misi, 10)
qplot(misi$missingData, geom = "histogram")
qplot(misi$missingData, geom = "histogram")
qplot(missingData)
qplot(misi)
qplot(data = censusData, x = (censusData == "?"))
qplot(data = censusData, y = rowSums(censusData == "?"))
qplot(data = censusData, y = rowSums(censusData == "?"), size = I(1), alpha = I(0.5))
qplot(data = censusData, y = rowSums(censusData == "?"), size = I(1), alpha = I(0.5))
missingPercentages <- rowSums(censusData=="?")/rowSums(!is.na(censusData))*100
qplot(data = censusData, y = rowSums(censusData == "?"), xlab = "Index", ylab = "# of Missing values", size = I(1), alpha = I(0.5))
qplot(censusData$age, xlab = "Age", ylab= "Frquency", geom="histogram")
qplot(censusData$hrs_per_week, xlab = "Hours per week", ylab= "Frquency", geom="histogram")
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Frquency", facets = income ~ .)
qplot(data = censusData, x = hrs_per_week , geom = "histogram", xlab = "Hours per Week", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = income, y = age, xlab = "Income", ylab = "Age", geom = "boxplot")
qplot(data = censusData, x = income, y = hrs_per_week, xlab = "Income", ylab = "Hours Per Week", geom = "boxplot")
qplot(data = censusData, x = work, xlab = "Work", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = edu, xlab = "EDU", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = marital, xlab = "Marital", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = occupation, xlab = "Occupation", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = occupation, xlab = "Occupation", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = race, xlab = "Race", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = sex, xlab = "Sex", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = work , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = edu , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = edu , geom = "bar", xlab = "Work", ylab = "Counts based on Income", facets = income ~ .)
qplot(data = censusData, x = work , geom = "bar", xlab = "Work", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = edu , geom = "bar", xlab = "EDU", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = marital , geom = "bar", xlab = "Marital", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = occupation , geom = "bar", xlab = "Occupation", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = race , geom = "bar", xlab = "Race", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = sex , geom = "bar", xlab = "Sex", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(3, 5), size = I(1))
cor.test(censusData$age, censusData$hrs_per_week)
cor(censusData$age, censusData$hrs_per_week)
library(ggplot2)
censusData <- read.csv("~/Downloads/censusData.csv")
missingPercentages <- rowSums(censusData=="?")/rowSums(!is.na(censusData))*100
qplot(data = censusData, y = rowSums(censusData == "?"), xlab = "Index", ylab = "# of Missing values", size = I(1), alpha = I(0.5))
qplot(censusData$age, xlab = "Age", ylab= "Frquency", geom="histogram")
qplot(censusData$hrs_per_week, xlab = "Hours per week", ylab= "Frquency", geom="histogram")
qplot(data = censusData, x = age, geom = "histogram", xlab = "Age", ylab = "Frquency", facets = income ~ .)
qplot(data = censusData, x = hrs_per_week , geom = "histogram", xlab = "Hours per Week", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = income, y = age, xlab = "Income", ylab = "Age", geom = "boxplot")
qplot(data = censusData, x = income, y = hrs_per_week, xlab = "Income", ylab = "Hours Per Week", geom = "boxplot")
qplot(data = censusData, x = work, xlab = "Work", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = edu, xlab = "EDU", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = marital, xlab = "Marital", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = occupation, xlab = "Occupation", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = race, xlab = "Race", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = sex, xlab = "Sex", ylab = "Frequency", geom = "bar")
qplot(data = censusData, x = work , geom = "bar", xlab = "Work", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = edu , geom = "bar", xlab = "EDU", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = marital , geom = "bar", xlab = "Marital", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = occupation , geom = "bar", xlab = "Occupation", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = race , geom = "bar", xlab = "Race", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = sex , geom = "bar", xlab = "Sex", ylab = "Frequency", facets = income ~ .)
qplot(data = censusData, x = age, y = hrs_per_week, geom = "point",  alpha = I(0.5), position_jitter(3, 5), size = I(1))
cor.test(censusData$age, censusData$hrs_per_week)
cor(censusData$age, censusData$hrs_per_week)
help(matchpt)
help(matchpt)
#Set the base directory
setwd("School/Pattern Recognition and Data Mining/EegHandRecognition/R")
set.seed(100)
options(scipen=999) #no scientific numbers
options (digits = 4) #hold decimal places to 4
#Loading the necessary libraries
library(signal)
library(dplyr)
library(caret)
library(stats)
#Initialize variables
num_subjects <- 1
num_series <- 8
num_test_subjects <- 1
#function definitons
##Function to apply the band-pass filtering
apply_filter <- function(dataMatrix, bfFilters) {
cols <- ncol(dataMatrix)
rows <- nrow(dataMatrix)
fMatrix <- matrix(nrow = rows, ncol = cols)
finalMatrix <- matrix(nrow = rows, ncol = 39)
for(i in 1:cols) {
d <- dataMatrix[,i]
fMatrix[,i] <- signal::filter(bfFilters, t(d))
}
colnames(fMatrix) = c("Fp1", "Fp2", "F7", "F3", "Fz", "F4", "F8", "FC5", "FC1", "FC2", "FC6", "T7", "C3", "Cz", "C4", "T8", "TP9", "CP5", "CP1", "CP2", "CP6", "TP10", "P7", "P3", "Pz", "P4", "P8", "PO9", "O1", "Oz", "O2", "PO10")
fMatrix
}
#Reading in the training data
for(i in 1:num_subjects) {
list_dataMatrix <- list()
list_eventMatrix <- list()
for(j in 1 : num_series) {
print(paste("Analyzing Subject: ", i, "Series:", j))
subj_series_data <- paste('train/subj', i,'_series', j, '_data.csv', sep='')
subj_series_event <- paste('train/subj', i,'_series', j, '_events.csv', sep='')
list_dataMatrix[[j]] <- read.csv(subj_series_data)
list_eventMatrix[[j]] <- read.csv(subj_series_event)
}
d <- rbind_all(list_dataMatrix)
e <- rbind_all(list_eventMatrix)
f<- cbind(d[,-1], e[,-1])
inTrain <- createDataPartition(y = f$HandStart, p = .75, list = FALSE)
training <- f[inTrain, ]
testing <- f[-inTrain, ]
rm(list_eventMatrix, list_dataMatrix)
}
################################ Pre processing #####################################
subj1_trainData <- training[,-c(33:38)]
subj1_trainEvent <- training[,-c(1:32)]
subj1_testD <- testing[,-c(33:38)]
subj1_testE <- testing[,-c(1:32)]
#Calculating the band-pass filter
bFilters <- butter(n = 5, W = c(0.028, 0.12), type = "pass", plane = "z")
#APPLYING THE FILTERS TO THE DATA
subj1_bFiltered <- apply_filter(subj1_trainData, bFilters)
subj1_trainData <- training[,-c(33:38)]
subj1_trainEvent <- training[,-c(1:32)]
subj1_testD <- testing[,-c(33:38)]
subj1_testE <- testing[,-c(1:32)]
#Calculating the band-pass filter
bFilters <- butter(n = 5, W = c(0.028, 0.12), type = "pass", plane = "z")
#APPLYING THE FILTERS TO THE DATA
subj1_bFiltered <- apply_filter(subj1_trainData, bFilters)
subj1_tt <- apply_filter(subj1_testD, bFilters)
pca1 <- prcomp(subj1_bFiltered, retx = TRUE, center = TRUE, scale. = TRUE)
finalSubj1Pca <- pca1$x[,1:15]
finalSubj1Matrix <- cbind(finalSubj1Pca, subj1_trainEvent)
pca <- prcomp(subj1_tt, retx = TRUE, center = TRUE, scale. = TRUE)
finalSubj1 <- cbind(pca$x[,1:15], subj1_testE)
formula1 <- HandStart ~ PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10+PC11+PC12+PC13+PC14+PC15
train_control <- trainControl(method="cv", number=10)
lrFitHS <- train(formula1, data = finalSubj1Matrix, method = "glm", family="binomial", trControl = train_control)
lrClassesFDT <- predict(lrFitFDT,newdata = finalTestSubj1Matrix)
lrClassesHS <- predict(lrFitHS,newdata = finalSubj1)
lrClassesHS <- predict(lrFitHS,newdata = finalSubj1, type = "raw" )
roc(HandStart ~ lrClassesHS, data = finalSubj1)
library(pROC)
roc(HandStart ~ lrClassesHS, data = finalSubj1)
lrFitHS <- glm(formula1, data=finalSubj1Matrix,family=binomial)
lrClassesHS <- predict(lrFitHS,newdata=finalSubj1,type='response')
summary(lrFitHS)
lrClassesHS$prob =prob
finalTestSubj1Matrix$prob = lrClassesHS
finalSubj1$prob = lrClassesHS
roc(HandStart ~ lrClassesHS, data = finalSubj1)
as.matrix(lrClassesHS)[1102,]
as.matrix(lrClassesHS)[1103,]
as.matrix(lrClassesHS)[1121,]
